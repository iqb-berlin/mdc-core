<?xml version="1.0" encoding="utf-8"?>
<xs:schema 
	elementFormDefault="qualified"
	xmlns:xs="http://www.w3.org/2001/XMLSchema">

	<!-- für lang-Attribut -->
	<xs:import namespace="http://www.w3.org/XML/1998/namespace"
		schemaLocation="http://www.w3.org/2001/xml.xsd" />

	<xs:complexType name="MultiLanguageTextType">
		<xs:annotation>
			<xs:documentation xml:lang="de">
				Dieser Typ definiert allgemein ein Element für Text, der über ein lang-Attribut einer Sprache
				zugeordnet ist.
			</xs:documentation>
		</xs:annotation>
		<xs:simpleContent>
			<xs:extension base="xs:string">
				<xs:attribute ref="xml:lang" default="de" />
			</xs:extension>
		</xs:simpleContent>
	</xs:complexType>

	<xs:complexType name="MetaDataSimpleType">
		<xs:annotation>
			<xs:documentation xml:lang="de">
				Dieser Typ legt eine Verwendung von Medatatendefinitionen in Datenobjekten fest.
				Da Kataloge und Metadatendefintionen selbst Datenobjekte sind, die Medatatendefinitionen
				verwenden, ist diese Verwendung hier zu definieren.
				MetaDataSimpleType legt fest, wie die Metadaten gespeichert werden, wenn es sich NICHT um
				mehrsprachige Texte handelt.
			</xs:documentation>
		</xs:annotation>
		<xs:simpleContent>
			<xs:extension base="xs:string">
				<xs:attribute name="cat" type="xs:string" use="required">
					<xs:annotation>
						<xs:documentation xml:lang="de">
							Die Bezeichnung des Katalogs. Es handelt sich meist um eine Url zu einer Datei.
						</xs:documentation>
					</xs:annotation>
				</xs:attribute>
				<xs:attribute name="def" type="xs:nonNegativeInteger" use="required">
					<xs:annotation>
						<xs:documentation xml:lang="de">
							Die ID der Metadatendefinition innerhalb des Katalogs.
						</xs:documentation>
					</xs:annotation>
				</xs:attribute>
			</xs:extension>
		</xs:simpleContent>
	</xs:complexType>

	<xs:complexType name="MetaDataMultiLanguageTextType">
		<xs:annotation>
			<xs:documentation xml:lang="de">
				Dieser Typ legt eine Verwendung von Medatatendefinitionen in Datenobjekten fest.
				Da Kataloge und Metadatendefintionen selbst Datenobjekte sind, die Medatatendefinitionen
				verwenden, ist diese Verwendung hier zu definieren.
				MultiLanguageTextType legt fest, wie die Metadaten gespeichert werden, wenn es sich um
				mehrsprachige Texte handelt.
			</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="V" type="MultiLanguageTextType" minOccurs="1" maxOccurs="unbounded"/>
		</xs:sequence>
		<xs:attribute name="cat" type="xs:string" use="required">
			<xs:annotation>
				<xs:documentation xml:lang="de">
					Die Bezeichnung des Katalogs. Es handelt sich meist um eine Url zu einer Datei.
				</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="def" type="xs:nonNegativeInteger" use="required">
			<xs:annotation>
				<xs:documentation xml:lang="de">
					Die ID der Metadatendefinition innerhalb des Katalogs.
				</xs:documentation>
			</xs:annotation>
		</xs:attribute>
	</xs:complexType>

	<xs:complexType name="MetaDataSetType">
		<xs:annotation>
			<xs:documentation xml:lang="de">
				Dieser Typ legt eine Verwendung von Medatatendefinitionen in Datenobjekten fest.
				Da Kataloge und Metadatendefintionen selbst Datenobjekte sind, die Medatatendefinitionen
				verwenden, ist diese Verwendung hier zu definieren.
				MetaDataSetType legt fest, wie die Metadaten gespeichert werden, wenn es sich um
				ein Set von Metadaten handelt.
			</xs:documentation>
		</xs:annotation>
		<xs:choice maxOccurs="unbounded">
			<xs:annotation>
				<xs:documentation xml:lang="de">
					Ein Metadatenset kann einfache und mehrsprachige Metadaten enthalten. Es wird jeweils nur
					die ID der Metadatendefinition angegeben, da die Katalogreferenz im Set-Element bereits
					angegeben ist und Metadaten innerhalb eines Sets nicht auf fremde Kataloge verweisen dürfen.
				</xs:documentation>
			</xs:annotation>
			<xs:element name="MD">
				<xs:complexType>
					<xs:simpleContent>
						<xs:extension base="xs:string">
							<xs:attribute name="def" type="xs:nonNegativeInteger" use="required">
								<xs:annotation>
									<xs:documentation xml:lang="de">
										Die ID der Metadatendefinition innerhalb des Katalogs.
									</xs:documentation>
								</xs:annotation>
							</xs:attribute>
						</xs:extension>
					</xs:simpleContent>
				</xs:complexType>
			</xs:element>
	  		<xs:element name="MDL">
				<xs:complexType>
					<xs:sequence>
						<xs:element name="V" type="MultiLanguageTextType" minOccurs="1" maxOccurs="unbounded"/>
					</xs:sequence>
					<xs:attribute name="def" type="xs:nonNegativeInteger" use="required"/>
				</xs:complexType>
				<xs:unique name="MDLValueLanguageUnique">
					<xs:selector xpath="V"/>
					<xs:field xpath="@xml:lang"/>
				</xs:unique>
			</xs:element>
		</xs:choice>
		<xs:attribute name="cat" type="xs:string" use="required">
			<xs:annotation>
				<xs:documentation xml:lang="de">
					Die Bezeichnung des Katalogs. Es handelt sich meist um eine Url zu einer Datei.
				</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="def" type="xs:nonNegativeInteger" use="required">
			<xs:annotation>
				<xs:documentation xml:lang="de">
					Die ID der Metadatendefinition (hier: Set) innerhalb des Katalogs.
				</xs:documentation>
			</xs:annotation>
		</xs:attribute>
	</xs:complexType>

	<xs:complexType name="MetaDataListType">
		<xs:annotation>
			<xs:documentation xml:lang="de">
				Dieser Typ legt eine Verwendung von Medatatendefinitionen in Datenobjekten fest.
				Da Kataloge und Metadatendefintionen selbst Datenobjekte sind, die Medatatendefinitionen
				verwenden, ist diese Verwendung hier zu definieren.
				MetaDataListType legt fest, wie die Metadaten in einem Element gebündelt werden.
			</xs:documentation>
		</xs:annotation>
		<xs:choice maxOccurs="unbounded">
			<xs:annotation>
				<xs:documentation xml:lang="de">
					Eine MetaDataListe kann einfache und mehrsprachige Metadaten sowie Metadaten-Sets enthalten.
				</xs:documentation>
			</xs:annotation>
			<xs:element name="MD" type="MetaDataSimpleType"/>
			<xs:element name="MDL" type="MetaDataMultiLanguageTextType"/>
			<xs:element name="MDSet" type="MetaDataSetType"/>
		</xs:choice>
	</xs:complexType>

	<xs:element name="MDC">
		<xs:complexType>
			<xs:sequence>
				<xs:element name="Label" type="MultiLanguageTextType" minOccurs="1" maxOccurs="unbounded"/>
				<xs:element name="Description" type="MultiLanguageTextType" minOccurs="0" maxOccurs="unbounded"/>
				<xs:element name="Owner" type="MultiLanguageTextType" minOccurs="1" maxOccurs="unbounded"/>
				<xs:element name="License">
					<xs:complexType>
						<xs:simpleContent>
							<xs:extension base="xs:string">
								<xs:attribute name="url" type="xs:string" use="optional"/>
							</xs:extension>
						</xs:simpleContent>
					</xs:complexType>
				</xs:element>
				<xs:element name="CatalogMetadata" type="MetaDataListType" minOccurs="0" maxOccurs="1"/>
				<xs:element name="ChangeLog" minOccurs="0" maxOccurs="1">
					<xs:annotation>
						<xs:documentation xml:lang="de">
							Änderungen sollten hier dokumentiert werden. Anwendungen, die alte Katalog-Versionen
							verwenden, können durch diese Einträge einen sinnvollen Nutzerdialog starten, um die
							Metadaten der Datenobjekte an neue Katalog-Versionen anzupassen. Dies ist zwingend,
							wenn sich die MAJOR der Version ändert.
						</xs:documentation>
					</xs:annotation>
					<xs:complexType>
						<xs:sequence>
							<xs:element name="Change" minOccurs="1" maxOccurs="unbounded">
								<xs:complexType>
									<xs:simpleContent>
										<xs:extension base="xs:string">
											<xs:attribute name="defref" use="optional">
												<xs:annotation>
													<xs:documentation xml:lang="de">
														Hier können alle Metadatendefinitionen, die durch die Änderung
														betroffen sind, genannt werden (jeweils id getrennt durch
														Leerzeichen). Das Attribut ist optional, weil bei Hinzufügen
														von Defintionen oder Änderung der Katalog-Metadaten die
														Nennung nicht möglich ist.
													</xs:documentation>
												</xs:annotation>
												<xs:simpleType>
													<xs:restriction base="xs:string">
														<xs:pattern value="[0-9]+(\s[0-9]+)*"/>
													</xs:restriction>
												</xs:simpleType>
											</xs:attribute>
											<xs:attribute name="preversion" use="required">
												<xs:annotation>
													<xs:documentation xml:lang="de">
														Hier muss die Vorgängerversion angegeben werden.
													</xs:documentation>
												</xs:annotation>
												<xs:simpleType>
													<xs:restriction base="xs:string">
														<xs:pattern
																value="(0|[1-9][0-9]*)\.(0|[1-9][0-9]*)\.(0|[1-9][0-9]*)(\-([0-9A-Za-z-]+(\.[0-9A-Za-z-]+)*))?"/>
													</xs:restriction>
												</xs:simpleType>
											</xs:attribute>
											<xs:attribute name="timestamp" type="xs:dateTime" use="required"/>
										</xs:extension>
									</xs:simpleContent>
								</xs:complexType>
							</xs:element>
						</xs:sequence>
						<xs:attribute name="id" type="xs:nonNegativeInteger" use="required"/>
						<xs:attribute name="taxpos" use="optional">
							<xs:annotation>
								<xs:documentation xml:lang="de">
									Das taxpos-Attribut ist nur bei Taxonomien verwendet und kennzeichnet
									die Position. Die erste Zahl definiert die Position in der ersten
									Ebene, die zweite Zahl die Position in der zweiten Ebene usw.
								</xs:documentation>
							</xs:annotation>
							<xs:simpleType>
								<xs:restriction base="xs:string">
									<xs:pattern
											value="(0|[1-9][0-9]*)(\.(0|[1-9][0-9]*))*"/>
								</xs:restriction>
							</xs:simpleType>
						</xs:attribute>
					</xs:complexType>
				</xs:element>
				<xs:choice maxOccurs="unbounded">
					<xs:element name="MDDef">
						<xs:complexType>
							<xs:sequence>
								<xs:element name="Label" type="MultiLanguageTextType" minOccurs="1" maxOccurs="unbounded"/>
								<xs:element name="Description" type="MultiLanguageTextType" minOccurs="0" maxOccurs="unbounded"/>
								<xs:element name="MDDefMetadata" type="MetaDataListType" minOccurs="0" maxOccurs="1"/>
								<xs:element name="Constraints" minOccurs="0" maxOccurs="1">
									<xs:annotation>
										<xs:documentation xml:lang="de">
											Die Constraints haben je nach Datentyp unterschiedliche Bedeutung bzw.
											werden ignoriert.
										</xs:documentation>
									</xs:annotation>
									<xs:complexType>
										<xs:all>
											<xs:element name="Min" type="xs:nonNegativeInteger" minOccurs="0" maxOccurs="1"/>
											<xs:element name="Max" type="xs:nonNegativeInteger" minOccurs="0" maxOccurs="1"/>
											<xs:element name="Languages" type="xs:string" minOccurs="0" maxOccurs="1"/>
										</xs:all>
									</xs:complexType>
								</xs:element>
								<xs:element name="DefaultValue" type="xs:string" minOccurs="0" maxOccurs="1"/>
								<xs:element name="Value" minOccurs="0" maxOccurs="unbounded">
									<xs:annotation>
										<xs:documentation xml:lang="de">
											Eine Liste von Value-Elementen wird nur verwendet, wenn es sich um ein
											Vokabular handelt (Liste oder Taxonomie).
										</xs:documentation>
									</xs:annotation>
									<xs:complexType>
										<xs:sequence>
											<xs:element name="Label" type="MultiLanguageTextType" minOccurs="1" maxOccurs="unbounded"/>
											<xs:element name="Description" type="MultiLanguageTextType" minOccurs="0" maxOccurs="unbounded"/>
										</xs:sequence>
										<xs:attribute name="id" type="xs:nonNegativeInteger" use="required"/>
										<xs:attribute name="taxpos" use="optional">
											<xs:annotation>
												<xs:documentation xml:lang="de">
													Das taxpos-Attribut ist nur bei Taxonomien verwendet und kennzeichnet
													die Position. Die erste Zahl definiert die Position in der ersten
													Ebene, die zweite Zahl die Position in der zweiten Ebene usw.
												</xs:documentation>
											</xs:annotation>
											<xs:simpleType>
												<xs:restriction base="xs:string">
													<xs:pattern
															value="(0|[1-9][0-9]*)(\.(0|[1-9][0-9]*))*"/>
												</xs:restriction>
											</xs:simpleType>
										</xs:attribute>
									</xs:complexType>
                				</xs:element>
							</xs:sequence>
							<xs:attribute name="id" type="xs:nonNegativeInteger" use="required"/>
							<xs:attribute name="type" use="required">
								<xs:simpleType>
									<xs:restriction base="xs:string">
										<xs:enumeration value="integer" />
										<xs:enumeration value="decimal">
											<xs:annotation>
												<xs:documentation xml:lang="de">
													decimal kann noch die Anzahl gewünschter Kommastellen enthalten
													(siehe unten).
												</xs:documentation>
											</xs:annotation>
										</xs:enumeration>
										<xs:enumeration value="decimal.1" />
										<xs:enumeration value="decimal.2" />
										<xs:enumeration value="decimal.3" />
										<xs:enumeration value="decimal.4" />
										<xs:enumeration value="decimal.5" />
										<xs:enumeration value="decimal.6" />
										<xs:enumeration value="decimal.7" />
										<xs:enumeration value="decimal.8" />
										<xs:enumeration value="decimal.9" />
										<xs:enumeration value="textde">
											<xs:annotation>
												<xs:documentation xml:lang="de">
													Einfaches Textfeld, im Zweifel in deutsch.
												</xs:documentation>
											</xs:annotation>
										</xs:enumeration>
										<xs:enumeration value="textde.singleline" />
										<xs:enumeration value="textde.multiline" />
										<xs:enumeration value="textmultilang">
											<xs:annotation>
												<xs:documentation xml:lang="de">
													Hat bei der Verwendung im Datenobjekt den Wert nicht direkt als
													Element-Value gespeichert (MetaDataSimpleType), sondern ist vom Typ
													MetaDataMultiLanguageTextType (Liste von V-Elementen
													vom Typ MultiLanguageTextType)
												</xs:documentation>
											</xs:annotation>
										</xs:enumeration>
										<xs:enumeration value="textmultilang.singleline" />
										<xs:enumeration value="textmultilang.multiline" />
										<xs:enumeration value="date" />
										<xs:enumeration value="link.file" />
										<xs:enumeration value="link.folder" />
										<xs:enumeration value="boolean" />
										<xs:enumeration value="second" />
										<xs:enumeration value="listsingleselect" />
										<xs:enumeration value="listsingleselect.singleline" />
										<xs:enumeration value="listsingleselect.list">
											<xs:annotation>
												<xs:documentation xml:lang="de">
													UI-Vorschlag: Werte im Container untereinander
												</xs:documentation>
											</xs:annotation>
										</xs:enumeration>
										<xs:enumeration value="listsingleselect.float">
											<xs:annotation>
												<xs:documentation xml:lang="de">
													UI-Vorschlag: Werte im Container fließend mit Umbruch
												</xs:documentation>
											</xs:annotation>
										</xs:enumeration>
										<xs:enumeration value="listmultiselect" />
										<xs:enumeration value="listmultiselect.list">
											<xs:annotation>
												<xs:documentation xml:lang="de">
													UI-Vorschlag: Werte im Container untereinander
												</xs:documentation>
											</xs:annotation>
										</xs:enumeration>
										<xs:enumeration value="listmultiselect.float">
											<xs:annotation>
												<xs:documentation xml:lang="de">
													UI-Vorschlag: Werte im Container fließend mit Umbruch
												</xs:documentation>
											</xs:annotation>
										</xs:enumeration>
										<xs:enumeration value="listmultiselect.expandable">
											<xs:annotation>
												<xs:documentation xml:lang="de">
													UI-Vorschlag: Werte im Container fließend, aber nicht immer
													alle dargestellt, sondern erst bei Klick auf Button (günstig bei
													hoher Anzahl von Listenwerten)
												</xs:documentation>
											</xs:annotation>
										</xs:enumeration>
										<xs:enumeration value="taxonomy" />
									</xs:restriction>
								</xs:simpleType>
							</xs:attribute>
						</xs:complexType>
						<xs:unique name="MDDefLabelLanguageUnique">
							<xs:selector xpath="Label"/>
							<xs:field xpath="@xml:lang"/>
						</xs:unique>
						<xs:unique name="MDDefDescriptionLanguageUnique">
							<xs:selector xpath="Description"/>
							<xs:field xpath="@xml:lang"/>
						</xs:unique>
						<xs:unique name="MDDefValueIdUnique">
							<xs:selector xpath="Value"/>
							<xs:field xpath="@id"/>
						</xs:unique>
					</xs:element>
					<xs:element name="MDSetDef">
						<xs:complexType>
							<xs:sequence>
								<xs:element name="Label" type="MultiLanguageTextType" minOccurs="1" maxOccurs="unbounded"/>
								<xs:element name="Description" type="MultiLanguageTextType" minOccurs="0" maxOccurs="unbounded"/>
								<xs:element name="MDSetDefMetadata" type="MetaDataListType" minOccurs="0" maxOccurs="1"/>
								<xs:element name="MDDef" type="xs:nonNegativeInteger" minOccurs="2" maxOccurs="unbounded">
									<xs:annotation>
										<xs:documentation xml:lang="de">
											Liste von IDs von Metadatendefinitionen desselben Katalogs. Achtung:
											Reihenfolge der Elemente entspricht der gewünschten Reihenfolge bei der
											Darstellung.
										</xs:documentation>
									</xs:annotation>
								</xs:element>
							</xs:sequence>
							<xs:attribute name="id" type="xs:nonNegativeInteger" use="required"/>
						</xs:complexType>
						<xs:unique name="MDSetDefLabelLanguageUnique">
							<xs:selector xpath="Label"/>
							<xs:field xpath="@xml:lang"/>
						</xs:unique>
						<xs:unique name="MDSetDefDescriptionLanguageUnique">
							<xs:selector xpath="Description"/>
							<xs:field xpath="@xml:lang"/>
						</xs:unique>
					</xs:element>
				</xs:choice>
			</xs:sequence>
			<xs:attribute name="id" type="xs:string" use="required"/>
			<xs:attribute name="version" use="required">
				<xs:simpleType>
					<xs:annotation>
						<xs:documentation xml:lang="de">
							Das version-Attribut des Katalogs folgt der SemVer-Notation. Es ist darauf zu achten,
							dass bei der Veröffentlichung des Katalogs die URL auch dieselbe Version enthält.
						</xs:documentation>
					</xs:annotation>
					<xs:restriction base="xs:string">
						<xs:pattern
							value="(0|[1-9][0-9]*)\.(0|[1-9][0-9]*)\.(0|[1-9][0-9]*)(\-([0-9A-Za-z-]+(\.[0-9A-Za-z-]+)*))?"/>
					</xs:restriction>
				</xs:simpleType>
			</xs:attribute>
		</xs:complexType>
		<xs:unique name="MDCatLabelLanguageUnique">
			<xs:selector xpath="Label"/>
			<xs:field xpath="@xml:lang"/>
		</xs:unique>
		<xs:unique name="MDCatDescriptionLanguageUnique">
			<xs:selector xpath="Description"/>
			<xs:field xpath="@xml:lang"/>
		</xs:unique>
		<xs:unique name="MDCatOwnerLanguageUnique">
			<xs:selector xpath="Owner"/>
			<xs:field xpath="@xml:lang"/>
		</xs:unique>
		<xs:unique name="MDDefIdUnique">
			<xs:selector xpath="MDDef|MDSetDef"/>
			<xs:field xpath="@id"/>
		</xs:unique>
	</xs:element>
</xs:schema>
